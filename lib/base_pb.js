/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpcservice.DataResponse', null, global);
goog.exportSymbol('proto.grpcservice.DataRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcservice.DataRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcservice.DataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	proto.grpcservice.DataRequest.displayName = 'proto.grpcservice.DataRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto suitable for use in Soy templates.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
	 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
	 *     for transitional soy proto support: http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.grpcservice.DataRequest.prototype.toObject = function (opt_includeInstance) {
		return proto.grpcservice.DataRequest.toObject(opt_includeInstance, this);
	};


	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Whether to include the JSPB
	 *     instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.helloworld.HelloRequest} msg The msg instance to transform.
	 * @return {!Object}
	 */
	proto.grpcservice.DataRequest.toObject = function (includeInstance, msg) {
		var f, obj = {
			params: msg.getParams()
		};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helloworld.HelloRequest}
 */
proto.grpcservice.DataRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.grpcservice.DataRequest;
	return proto.grpcservice.DataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helloworld.HelloRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helloworld.HelloRequest}
 */
proto.grpcservice.DataRequest.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setParams(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.helloworld.HelloRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.grpcservice.DataRequest.serializeBinaryToWriter = function (message, writer) {
	message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcservice.DataRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	this.serializeBinaryToWriter(writer);
	return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.grpcservice.DataRequest.prototype.serializeBinaryToWriter = function (writer) {
	var f = undefined;
	f = this.getParams();
	if (f.length > 0) {
		writer.writeString(
			1,
			f
		);
	}
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.helloworld.HelloRequest} The clone.
 */
proto.grpcservice.DataRequest.prototype.cloneMessage = function () {
	return /** @type {!proto.helloworld.HelloRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grpcservice.DataRequest.prototype.getParams = function () {
	return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.grpcservice.DataRequest.prototype.setParams = function (value) {
	jspb.Message.setField(this, 1, value);
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcservice.DataResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcservice.DataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	proto.grpcservice.DataResponse.displayName = 'proto.grpcservice.DataResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto suitable for use in Soy templates.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
	 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
	 *     for transitional soy proto support: http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.grpcservice.DataResponse.prototype.toObject = function (opt_includeInstance) {
		return proto.grpcservice.DataResponse.toObject(opt_includeInstance, this);
	};


	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Whether to include the JSPB
	 *     instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.helloworld.HelloReply} msg The msg instance to transform.
	 * @return {!Object}
	 */
	proto.grpcservice.DataResponse.toObject = function (includeInstance, msg) {
		var f, obj = {
			result: msg.getResult()
		};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.helloworld.HelloReply}
 */
proto.grpcservice.DataResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.grpcservice.DataResponse;
	return proto.grpcservice.DataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.helloworld.HelloReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.helloworld.HelloReply}
 */
proto.grpcservice.DataResponse.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setResult(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.helloworld.HelloReply} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.grpcservice.DataResponse.serializeBinaryToWriter = function (message, writer) {
	message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcservice.DataResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	this.serializeBinaryToWriter(writer);
	return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.grpcservice.DataResponse.prototype.serializeBinaryToWriter = function (writer) {
	var f = undefined;
	f = this.getResult();
	if (f.length > 0) {
		writer.writeString(
			1,
			f
		);
	}
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.helloworld.HelloReply} The clone.
 */
proto.grpcservice.DataResponse.prototype.cloneMessage = function () {
	return /** @type {!proto.helloworld.HelloReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.grpcservice.DataResponse.prototype.getResult = function () {
	return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.grpcservice.DataResponse.prototype.setResult = function (value) {
	jspb.Message.setField(this, 1, value);
};


goog.object.extend(exports, proto.grpcservice);
